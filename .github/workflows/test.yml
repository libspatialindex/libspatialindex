
name: Test
on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: OS ${{ matrix.os }} with BUILD_SHARED_LIBS=${{matrix.shared}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        shared: [ON, OFF]

    steps:
     - uses: actions/checkout@v4
     - uses: ilammy/msvc-dev-cmd@v1
       if: matrix.os == 'windows-latest'
     - name: Support longpaths
       run: git config --system core.longpaths true
       if: matrix.os == 'windows-latest'
     - uses: mamba-org/setup-micromamba@v1
       with:
           init-shell: bash
           environment-file: ci/environment.yml
           environment-name: "build"
           cache-environment: true
           cache-downloads: true

     - name: Setup
       shell: bash -l {0}
       run: |
           mkdir build

     - name: CMake
       shell: bash -l {0}
       env:
        BUILD_SHARED_LIBS: ${{ matrix.shared }}

       run: |

        if [ "$RUNNER_OS" == "Windows" ]; then
        export CC=cl.exe
        export CXX=cl.exe
        fi

        cmake   -G "Ninja"  \
              -DCMAKE_BUILD_TYPE=RelWithDebInfo \
              -DBUILD_SHARED_LIBS=$BUILD_SHARED_LIBS \
              -DBUILD_TESTING=ON \
              -DCMAKE_INSTALL_PREFIX=${CONDA_PREFIX} \
              -Dgtest_force_shared_crt=ON \
              ..


       working-directory: ./build

     - name: Compile
       shell: bash -l {0}
       run: |
          ninja
       working-directory: ./build

     - name: Test
       shell: bash -l {0}
       run: |
          ctest -VV --rerun-failed --output-on-failure
       working-directory: ./build

     - name: Generate source distribution
       shell: bash -l {0}
       if: matrix.os == 'ubuntu-latest'
       run: |
          ninja dist
       working-directory: ./build

     - uses: actions/upload-artifact@v4
       if: matrix.os == 'ubuntu-latest'
       name: Gather source distribution artifact
       with:
         # Name of the artifact to upload.
         # Optional. Default is 'artifact'
         name: source-package

         # A file, directory or wildcard pattern that describes what to upload
         # Required.
         path: |
          spatialindex-src-*

     - name: Publish package distribution as release artifacts
       if: github.event_name == 'release' && github.event.action == 'published' && matrix.os == 'ubuntu-latest'
       run: |
        echo "uploading artifacts to release"
